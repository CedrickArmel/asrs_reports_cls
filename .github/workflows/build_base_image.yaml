name: Build base image

on:
  push:
    branches:
      - 'main'
    paths:
      - Dockerfile.base

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Create .env file based on Github Secrets
        run: |
          echo "GCP_PIPELINES_ROOT=${{ secrets.GCP_PIPELINES_ROOT }}" >> .env
          echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
          echo "GCP_PROJECT_REGION=${{ secrets.GCP_PROJECT_REGION }}" >> .env
          echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> .env
          echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> .env
          echo "IMAGE=${{ secrets.IMAGE }}" >> .env
          echo "KUBEFLOW_HOST=${{ secrets.KUBEFLOW_HOST }}" >> .env
          echo "KUBEFLOW_PIPELINES_ROOT=${{ secrets.KUBEFLOW_PIPELINES_ROOT }}" >> .env
          echo "RAW_SOURCE=${{ secrets.RAW_SOURCE }}" >> .env
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.base
          push: true
          tags: drxc/asrs_base:latest
          cache-from: type=registry,ref=drxc/asrs_base:buildcache
          cache-to: type=registry,ref=drxc/asrs_base:buildcache,mode=max

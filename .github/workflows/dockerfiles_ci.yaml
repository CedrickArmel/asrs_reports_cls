name: Docker Files CI

on:
  pull_request:
    branches:
      - 'main'

jobs:
  docker-ci:
    strategy:
      max-parallel: 1
      matrix:
        DEVICE: ['cpu', 'gpu']
    runs-on: ubuntu-latest
    steps:
      - 
        name: Free build disk space
        run: |
          set -euo pipefail
          echo "==> Available space before cleanup"
          echo
          df -h
          echo "==> Pruning the runner"
          echo
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo docker system prune --volumes -f > /dev/null
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/share/dotnet
          sudo apt-get autoremove -y > /dev/null
          sudo apt-get clean > /dev/null
          echo
          echo "==> Available space after cleanup"
          echo
          df -h
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Create .env file based on Github Secrets
        run: |
          echo "AIP_TENSORBOARD=${{ secrets.AIP_TENSORBOARD }}" >> .env
          echo "ENDPOINT=${{ secrets.ENDPOINT }}" >> .env
          echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> .env
          echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> .env
          echo "GPU_IMAGE=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.IMAGE }}:gpu"
          echo "IMAGE=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ vars.IMAGE }}:cpu" >> .env
          echo "PIPELINE_ROOT=${{ secrets.PIPELINE_ROOT }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "RAW_DATA=${{ secrets.RAW_DATA }}" >> .env
          echo "REGION=${{ secrets.REGION }}" >> .env
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Images build test
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/armd64
          build-args: |
            PYTHONVERSION=${{ vars.PYTHONVERSION }}
            BASE_VERSION=${{ vars.BASE_VERSION }}
            DEVICE=${{ matrix.DEVICE }}
          file: Dockerfile
          push: false
          tags: |
            ${{ vars.IMAGE }}:${{ matrix.DEVICE}}
          cache-from: type=registry,ref=${{ vars.IMAGE }}:${{ matrix.DEVICE}}-cache
          cache-to: type=registry,ref=${{ vars.IMAGE }}:${{ matrix.DEVICE}}-cache,mode=max

name: Feature Engineering Workflow

on:
  push:
    branches:
      - 'main'
    paths:
      - src/feature_engineering**
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  submit-feature-engineering-pipeline:
    # needs: call-images-build-and-push-workflow
    runs-on: ubuntu-latest
    steps:
      -
        name: Setup pyenv
        uses: "gabrielfalcao/pyenv-action@v18"
        with:
          default: 3.10.13
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        id: gcp_auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.3
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WIP }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      -
        name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'
      -
        name: Create .env file based on Github Secrets
        run: |
          echo "ENDPOINT=${{ secrets.ENDPOINT }}" >> .env
          echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> .env
          echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> .env
          echo "IMAGE=${{ secrets.ARTIFACT_REGISTRY_TAG }}" >> .env
          echo "PIPELINE_ROOT=${{ secrets.PIPELINE_ROOT }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "RAW_DATA=${{ secrets.RAW_DATA }}" >> .env
          echo "REGION=${{ secrets.REGION }}" >> .env
      -
        name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      -
        name: Create venv and install requirements
        run: |
          python3 -m venv asrs && source asrs/bin/activate
          poetry install --without dev --no-root
      -
        name: Submit Pipeline
        run: |
          python3 src/feature_engineering/pipeline.py

name: Reusable Build and Push images

on:
  workflow_call:
    secrets:
      ARTIFACT_REGISTRY_TAG:
        required: true
      DOCKERHUB_CACHE_TAG:
        required: true
      DOCKERHUB_TAG:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      ENDPOINT:
        required: true
      GOOGLE_APPLICATION_CREDENTIALS:
        required: true
      HOPSWORKS_API_KEY:
        required: true
      HOPSWORKS_PROJECT:
        required: true
      PIPELINE_ROOT:
        required: true
      PROJECT_ID:
        required: true
      RAW_DATA:
        required: true
      REGION:
        required: true
      WIP:
        required: true

jobs:
  build-base-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        id: gcp_auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.3
        with:
          create_credentials_file: 'true'
          project_id: ${{ secrets.PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WIP }}
      -
        name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'
      -
        name: Create .env file based on Github Secrets
        run: |
          echo "ENDPOINT=${{ secrets.ENDPOINT }}" >> .env
          echo "GOOGLE_APPLICATION_CREDENTIALS=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" >> .env
          echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> .env
          echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> .env
          echo "IMAGE=${{ secrets.ARTIFACT_REGISTRY_TAG }}" >> .env
          echo "PIPELINE_ROOT=${{ secrets.PIPELINE_ROOT }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "RAW_DATA=${{ secrets.RAW_DATA }}" >> .env
          echo "REGION=${{ secrets.REGION }}" >> .env
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: "Authorize Docker to push to Artifact Registry"
        run: |
          gcloud auth login --brief --cred-file="${{ steps.gcp_auth.outputs.credentials_file_path }}"
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build image
        run: |
          docker buildx create --name builder --driver=docker-container
          docker buildx build -t ${{ secrets.DOCKERHUB_TAG }} -f Dockerfile.base --builder=builder --platform=linux/amd64,linux/arm64 .
      -
        name: Push image
        run: |
          docker tag ${{ secrets.DOCKERHUB_TAG }} ${{ secrets.ARTIFACT_REGISTRY_TAG }}
          docker push ${{ secrets.DOCKERHUB_TAG }}
          docker push ${{ secrets.ARTIFACT_REGISTRY_TAG }}
      -

name: Reusable Build and Push images

on:
  workflow_call:
    secrets:
      AIP_TENSORBOARD:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      ENDPOINT:
        required: true
      HOPSWORKS_API_KEY:
        required: true
      HOPSWORKS_PROJECT:
        required: true
      PIPELINE_ROOT:
        required: true
      PROJECT_ID:
        required: true
      RAW_DATA:
        required: true
      REGION:
        required: true
      SERVICE_ACCOUNT:
        required: true
      WIP:
        required: true

    inputs:
      BASE_VERSION:
        required: true
        type: string
      IMAGE:
        required: true
        type: string
      PYTHONVERSION:
        required: true
        type: string


jobs:
  build-base-image:
    strategy:
      matrix:
        DEVICE: ['cpu', 'gpu']
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        id: gcp_auth
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.3
        with:
          project_id: ${{ secrets.PROJECT_ID }}
          workload_identity_provider: ${{ secrets.WIP }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      -
        name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'
      -
        name: Create .env file based on Github Secrets
        run: |
          echo "AIP_TENSORBOARD=${{ secrets.AIP_TENSORBOARD }}" >> .env
          echo "ENDPOINT=${{ secrets.ENDPOINT }}" >> .env
          echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> .env
          echo "HOPSWORKS_PROJECT=${{ secrets.HOPSWORKS_PROJECT }}" >> .env
          echo "GPU_IMAGE=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ inputs.IMAGE }}:gpu"
          echo "IMAGE=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ inputs.IMAGE }}:cpu" >> .env
          echo "PIPELINE_ROOT=${{ secrets.PIPELINE_ROOT }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "RAW_DATA=${{ secrets.RAW_DATA }}" >> .env
          echo "REGION=${{ secrets.REGION }}" >> .env
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: "Authorize Docker to push to Artifact Registry"
        run: |
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push CPU image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            PYTHONVERSION=${{ inputs.PYTHONVERSION }}
            BASE_VERSION=${{ inputs.BASE_VERSION }}
            DEVICE=${{ matrix.DEVICE }}
          file: Dockerfile
          push: true
          tags: |
            ${{ inputs.IMAGE }}:${{ matrix.DEVICE}}
            ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ inputs.IMAGE }}:${{ matrix.DEVICE}}
          cache-from: type=registry,ref=${{ inputs.IMAGE }}:${{ matrix.DEVICE}}-cache
          cache-to: type=registry,ref=${{ inputs.IMAGE }}:${{ matrix.DEVICE}}-cache,mode=max
